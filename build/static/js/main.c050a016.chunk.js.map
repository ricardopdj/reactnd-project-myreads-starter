{"version":3,"sources":["BooksAPI.js","Book.js","Search.js","Shelf.js","ListBook.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","_this$props","this","props","onMoveBook","react_default","a","createElement","key","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","target","disabled","title","Component","Search","state","updateQuery","_this","setState","onSearch","onClearSearch","_this2","searchedBooks","Link","to","type","placeholder","length","map","src_Book","Shelf","ListBook","src_Shelf","filter","BooksApp","myBooks","getBooks","BooksAPI","moveBook","response","b","clearSearch","Route","exact","path","render","src_Search","src_ListBook","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c050a016.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Book extends Component {\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { book, onMoveBook } = this.props\r\n\r\n        return (\r\n            <li key={book.id}>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${ book.imageLinks ? book.imageLinks.thumbnail : null})`}}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                            <select value={book.shelf ? book.shelf : \"none\"} onChange={(event) => onMoveBook(book, event.target.value)}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\"></div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\nimport Book from './Book'\r\n\r\nclass Search extends Component {\r\n    static propTypes = {\r\n        searchedBooks: PropTypes.array.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired,\r\n        onSearch: PropTypes.func.isRequired,\r\n        onClearSearch: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onClearSearch();\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState({query});\r\n        this.props.onSearch(this.state.query);\r\n    }\r\n\r\n    onMoveBook = (book, shelf) => {\r\n        book.shelf = shelf;\r\n        this.props.onMoveBook(book, shelf);\r\n    }\r\n\r\n    render() {\r\n        const { searchedBooks } = this.props\r\n        const { query } = this.state\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to='/' className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={(event) => this.updateQuery(event.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        { searchedBooks.length > 0 && searchedBooks.map(book =>\r\n                        <Book\r\n                            key={book.id}\r\n                            book={book}\r\n                            onMoveBook={this.onMoveBook}>\r\n                        </Book>\r\n                        )}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\n\r\nclass Shelf extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        books: PropTypes.array.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { id, title, books, onMoveBook } = this.props\r\n\r\n        return (\r\n            <div className=\"bookshelf\" key={id}>\r\n                <h2 className=\"bookshelf-title\">{title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {books.map(book =>\r\n                            <Book key={book.id} book={book} onMoveBook={onMoveBook}/>\r\n                        )}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shelf","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\nimport Shelf from './Shelf'\r\n\r\nclass ListBook extends Component {\r\n    static propTypes = {\r\n        books: PropTypes.array.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { books, onMoveBook } = this.props\r\n\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <Shelf\r\n                        key={1}\r\n                        id=\"shelf-1\"\r\n                        title=\"Currently Reading\"\r\n                        books={books.filter((book) => (book.shelf === \"currentlyReading\"))}\r\n                        onMoveBook={onMoveBook}/>\r\n                    <Shelf\r\n                        key={2}\r\n                        id=\"shelf-2\"\r\n                        title=\"Want to Read\"\r\n                        books={books.filter((book) => (book.shelf === \"wantToRead\"))}\r\n                        onMoveBook={onMoveBook}/>\r\n                    <Shelf\r\n                        key={3}\r\n                        id=\"shelf-3\"\r\n                        title=\"Read\"\r\n                        books={books.filter((book) => (book.shelf === \"read\"))}\r\n                        onMoveBook={onMoveBook}/>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to='/search'>Add a book</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBook","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Route } from \"react-router-dom\";\r\nimport Search from './Search'\r\nimport ListBook from './ListBook'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        myBooks: [],\r\n        searchedBooks: [],\r\n    }\r\n    componentDidMount() {\r\n        this.getBooks()\r\n    }\r\n\r\n    getBooks = () => {\r\n        BooksAPI\r\n            .getAll()\r\n            .then((myBooks) => {\r\n                this.setState({myBooks})\r\n            })\r\n    }\r\n\r\n    moveBook = (book, shelf) => {\r\n        BooksAPI\r\n            .update(book, shelf)\r\n            .then((response) => {\r\n                this.getBooks()\r\n            });\r\n    }\r\n\r\n    search = (query) => {\r\n        if (query.length > 0) {\r\n            BooksAPI\r\n                .search(query)\r\n                .then((searchedBooks) => {\r\n                    if (searchedBooks && searchedBooks.length > 0) {\r\n                        searchedBooks.map(book =>\r\n                            (this.state.myBooks.filter((b) => b.id === book.id)\r\n                            .map(b => book.shelf = b.shelf))\r\n                        )\r\n                        this.setState({searchedBooks})\r\n                    } else {\r\n                        this.clearSearch()\r\n                    }\r\n                });\r\n        } else {\r\n            this.clearSearch();\r\n        }\r\n    }\r\n\r\n    clearSearch = () => {\r\n        this.setState({ query: '', searchedBooks: []})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Route exact path='/search' render={() => (\r\n                    <Search searchedBooks={this.state.searchedBooks} onMoveBook={this.moveBook} onSearch={this.search} onClearSearch={this.clearSearch}/>\r\n                )}/>\r\n\r\n                <Route exact path='/' render={() => (\r\n                    <ListBook books={this.state.myBooks} onMoveBook={this.moveBook}/>\r\n                )}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>,\r\n    document.getElementById('root'))\r\n"],"sourceRoot":""}